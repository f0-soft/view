'use strict';

//TODO: клиент для доступа к сервисам: flexo, mailer, autopilot, etc.

// сервис должен предоставлять следующую информацию о себе:
// - методы;
// - сигнатуры методов (названия, обязательность указания, типы);
// - сигнатуры коллбеков ();
// - описание, как можно сузить запрос по пользователю и/или компании, если это возможно;
// эти описания должно быть просто читать и составлять
// у сервиса не должно быть методов с мульти-сигнатурой (как у mailer.do), иначе описание сигнатур будет сложным
// сервис может не предоставлять методы find, insert, modify, delete 
// если сервис предоставляет метод find, insert, modify, delete, то этот метод должен работать так же, как у flexo 

// сервис должен подключаться посредством конфигурационного файла
// в файле должны быть перечислены методы, на использование которых подписывается клиент
// в описании подключаемого метода может быть приведена карта дописывания запросов (userId, companyId, etc.)

// на основе полученных описаний модуль должен предоставлять доступ к методам сервисов
// перед вызовом сервиса модуль может проверить структуру запроса
// перед возвратом результата вызова, модуль может проверить ответ сервиса 


// Инициализация
// - подключение к сервисам
// - запрос сведений о сервисах
// - формирование правил проверки вызовов и ответов

// Обработка команды на запрос к сервису
// - проверить запрос правилом проверки вызовов
// - совершить запрос к сервису
// - проверить ответ от сервиса
// - вернуть результат запроса

var MockService = {
	service: {
		find: function() {},
		insert: function() {},
		modify: function() {},
		delete: function() {},
		edit: function() {},
		draft: function() {},
		attach: function() {}
	},
	info: {
		edit: {
			in: [ // правило argstype
				['query', true, 'o', [
					['user', true, 's'],
					['company', true, 's']
				]],
				['callback', true, 'f']
			],
			out: [ // правило argstype
				['error', true, 'o'],
				['data', false, 'o', [
					['_id', true, 's'],
					['tsUpdate', true, 'n']
				]]
			],
			fill: { // путь до параметра указывающего id пользователя или компании
				user: 'query.user',
				company: 'query.company'
			}
		}
	}
};

